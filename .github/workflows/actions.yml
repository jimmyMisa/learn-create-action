on:
  push:
    branches: [master]
jobs:
  testing-action:
    runs-on: ubuntu-latest
    steps:
      # - uses: actions/checkout@v2
      # - uses: ./.github/actions/hello-docker
      #   id: hello
      #   with:
      #     who-to-greet: "World k"
      # - run: |
      #     echo "Time: ${{ steps.hello.outputs.time }}"

      # - uses: ./.github/actions/issues
      #   id: issue
      #   if: failure()
      #   with:
      #       token: ${{ secrets.CUSTOM_TOKEN }}
      #       title: "New Automated issue ${{ github.sha}}"
      #       body: |
      #           main issue required workflow **${{github.workflow }}**.
      #           The commits hash : _${{ github.sha}}_.
      #       assignees: |
      #           ${{ github.event.sender.login }}
      
      # - name: Create issues
      #   if: failure()
      #   run: |
      #       curl --request POST \
      #       --url https://api.github.com/repos/${{ github.repository }}/issues \
      #       --header 'authorization: Bearer ${{ secrets.CUSTOM_TOKEN }}' \
      #       --header 'content-type: application/json' \
      #       --data '{
      #         "title":"Automated issue ${{ github.sha}}",
      #         "body":"main issue required workflow **${{github.workflow }}**.\n\n The commits hash : _${{ github.sha}}_.",
      #         "assignees":[
      #           "${{github.event.sender.login }}" 
      #         ]
      #         }
      
      # - name: Slack push notif
      #   run: |
      #       curl -X POST -H 'Content-type: application/json' --data '{"text":"notificaiton from GA"}' ${{ secrets.SLACK_WEBHOOK }}
      
      # - name: Debug
      #   run: |
      #       echo "123"
      #       echo "${{ toJson(github) }}"    
      
      - uses: actions/checkout@v2
      - name: Cache node_modudules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-key: |
            ${{ runner.os }}-node-
      - name: Use NodeJs
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"
      - run: npm ci
      - name: Create a release
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN}}